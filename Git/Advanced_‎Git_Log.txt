Content-Type: text/x-zim-wiki
Wiki-Format: zim 0.4
Creation-Date: 2018-08-15T10:10:29-04:00

====== Advanced â€ŽGit Log ======
Created Wednesday 15 August 2018

https://www.atlassian.com/git/tutorials/git-log

==== gitk - Graphical Git ====
When viewing large commit histories, or repos with many different branches, it is very useful to use a graphical interface for git. gitk comes installed with git-bash.

$ gitk


==== Aliases ====
https://stackoverflow.com/questions/1838873/visualizing-branch-topology-in-git
Add the following in your  [[~/.gitconfig]] to enhance git log output

[alias]
	lg = !"git lg1"
	lg1 = !"git lg1-specific --all"
	lg2 = !"git lg2-specific --all"
	lg3 = !"git lg3-specific --all"

	lg1-specific = log --graph --abbrev-commit --decorate --format=format:'%C(bold blue)%h%C(reset) - %C(bold green)(%ar)%C(reset) %C(white)%s%C(reset) %C(dim white)- %an%C(reset)%C(auto)%d%C(reset)'
	lg2-specific = log --graph --abbrev-commit --decorate --format=format:'%C(bold blue)%h%C(reset) - %C(bold cyan)%aD%C(reset) %C(bold green)(%ar)%C(reset)%C(auto)%d%C(reset)%n''          %C(white)%s%C(reset) %C(dim white)- %an%C(reset)'
	lg3-specific = log --graph --abbrev-commit --decorate --format=format:'%C(bold blue)%h%C(reset) - %C(bold cyan)%aD%C(reset) %C(bold green)(%ar)%C(reset) %C(bold cyan)(committed: %cD)%C(reset) %C(auto)%d%C(reset)%n''          %C(white)%s%C(reset)%n''          %C(dim white)- %an <%ae> %C(reset) %C(dim white)(committer: %cn <%ce>)%C(reset)'
	
git lg/git lg1 looks like this:
{{.\pasted_image.png}}

git lg2 looks like this:
{{.\pasted_image001.png}}

and git lg3 looks like this:
{{.\pasted_image002.png}}
